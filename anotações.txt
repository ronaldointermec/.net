// Baixa a imagem do sql 
docker pull mcr.microsoft.com/mssql/server:2019-latest

// Cria o container
docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Bruna#@1" -p 1433:1433 --name sqlserver -h sql1 -d e483dcbe7ede

// pacotes necessário para trabalhar com o banco de dados 
dotnet add package Microsoft.EntityFrameworkCore
dotnet add package Microsoft.EntityFrameworkCore.Design
dotnet add package Microsoft.EntityFrameworkCore.SqlServer


// CLI para migration
dotnet tool install --global dotnet-ef

// Cria migration 
dotnet ef migrations add CreateProduct

// Executa a migration 
dotnet ef database update

// Remove a última migration 
dotnet ef migrations remove

// Executa uma migration específica 
dotnet ef database update 20250101231855_CreateProduct

dotnet tool install --global dotnet-outdated-tool
// verifica se este atualização de pagotes e atualiza 
dotnet outdated --upgrade

// Build a aplicação e verifica se tem algo errado.
dotnet build























// app.MapGet("/user", () => new { Name = "Ronaldo Silva", Age = 44 });


// app.MapGet("/addheader", (HttpResponse response) =>
// {
//     response.Headers["Teste"] = "Ronaldo Silva"; // This will replace the value if it already exists
//     return new { Name = "Ronaldo Silva", Age = 44 };
// });


// // http://localhost:3000/getproduct?dateStart=2024-10-01&dateEnd=2024-11-22
// app.MapGet("/product", ([FromQuery] string dateStart, [FromQuery] string dateEnd) =>
// {
//     return dateStart + " - " + dateEnd;
// });

// http://localhost:3000/getproduct/123456780?
// app.MapGet("/product/{code}", ([FromRoute] string code) =>

// {
//     var product = ProductRepository.GetBy(code);

//     return product is not null
//         ? Results.Ok(product)
//         : Results.NotFound();
// }

// );

// // recebendo do header 
// app.MapGet("/productheader", (HttpRequest request) =>
// {
//     return request.Headers["product-code"].ToString();
// });